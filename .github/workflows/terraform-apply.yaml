name: Terraform Destroy (manual, auto-detect)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type EXACTLY: DESTROY'
        required: true
        type: string

env:
  AWS_REGION: ap-southeast-1

jobs:
  destroy:
    if: ${{ github.event.inputs.confirm == 'DESTROY' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find Terraform directory
        id: find_tf
        shell: bash
        run: |
          set -e
          echo "Looking for *.tf files (maxdepth 3)..."
          DIRS=$(find . -maxdepth 3 -type f -name "*.tf" -printf '%h\n' | sort -u)
          echo "$DIRS"
          if [ -z "$DIRS" ]; then
            echo "No .tf files found. Are they committed?"
            exit 1
          fi
          TF_DIR=$(echo "$DIRS" | head -n1)
          echo "Using TF_DIR=$TF_DIR"
          echo "TF_DIR=$TF_DIR" >> "$GITHUB_OUTPUT"

      - name: Debug: list TF dir
        run: |
          cd "${{ steps.find_tf.outputs.TF_DIR }}"
          pwd
          ls -la
          echo "TF files here:"
          ls -1 *.tf
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ${{ steps.find_tf.outputs.TF_DIR }}
        run: terraform init -input=false
        # If you use an S3 backend file:
        # run: terraform init -input=false -backend-config=backend-prod.hcl

      - name: Terraform Destroy
        working-directory: ${{ steps.find_tf.outputs.TF_DIR }}
        run: terraform destroy -auto-approve -input=false -no-color
